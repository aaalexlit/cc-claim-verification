version: '3.5'

services:
  etcd:
    container_name: milvus-etcd
    profiles:
      - mil
    image: milvusdb/etcd:3.5.5-r2
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/etcd/healthcheck.sh']
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2022-03-17T06-34-49Z
    profiles:
      - mil
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.2.0
    profiles:
      - mil
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
    depends_on:
      - "etcd"
      - "minio"

  postgres:
    image: postgres:15.1
    environment: &postgres_env
      POSTGRES_HOST: postgres
      POSTGRES_USER: pgadmin
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: postgres
      PGDATA: "/data/pgdata"
    ports:
        - 5432:5432
    volumes:
      - db_data:/data/pgdata

networks:
  default:
    name: milvus

volumes:
  db_data: